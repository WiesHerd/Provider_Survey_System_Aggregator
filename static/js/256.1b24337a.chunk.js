"use strict";(self.webpackChunksurvey_data_processing_system=self.webpackChunksurvey_data_processing_system||[]).push([[256],{6256:(t,e,a)=>{a.r(e),a.d(e,{default:()=>i});var o=a(2555);const r={NODE_ENV:"production",PUBLIC_URL:"/Provider_Survey_System_Aggregator",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}.REACT_APP_API_URL||"http://localhost:3001/api";class n{constructor(){}static getInstance(){return n.instance||(n.instance=new n),n.instance}async getSurveyMeta(t){const e=await fetch("".concat(r,"/survey/").concat(t,"/meta"));if(!e.ok)throw new Error("Failed to fetch survey metadata");return await e.json()}async uploadSurvey(t,e,a,o,n){const i=new FormData;i.append("file",t),i.append("name",e),i.append("year",a.toString()),i.append("type",o);const s=new XMLHttpRequest;return new Promise((t,e)=>{s.open("POST","".concat(r,"/upload")),s.onload=()=>{if(s.status>=200&&s.status<300)try{const e=JSON.parse(s.responseText);t({surveyId:e.surveyId,rowCount:e.rowCount})}catch(a){e(new Error("Invalid server response"))}else e(new Error("Upload failed: ".concat(s.status," ").concat(s.statusText)))},s.onerror=()=>e(new Error("Network error during upload")),s.upload.onprogress=t=>{if(!n||!t.lengthComputable)return;const e=Math.round(t.loaded/t.total*100);n(e)},s.send(i)})}async getAllSurveys(){const t=await fetch("".concat(r,"/surveys"));if(!t.ok)throw new Error("Failed to fetch surveys");return(await t.json()).map(t=>{var e,a,o,r,n,i;return{id:t.id,name:t.name,year:t.year.toString(),type:t.type,uploadDate:t.uploadDate,rowCount:null!==(e=null!==(a=t.rowCount)&&void 0!==a?a:t.row_count)&&void 0!==e?e:0,specialtyCount:null!==(o=null!==(r=t.specialtyCount)&&void 0!==r?r:t.specialty_count)&&void 0!==o?o:0,dataPoints:null!==(n=null!==(i=t.dataPoints)&&void 0!==i?i:t.data_points)&&void 0!==n?n:0,colorAccent:t.colorAccent||"#6366F1",metadata:t.metadata}})}async getSurveyData(t,e,a){const n=new URLSearchParams;null!==e&&void 0!==e&&e.specialty&&n.append("specialty",e.specialty),null!==e&&void 0!==e&&e.providerType&&n.append("providerType",e.providerType),null!==e&&void 0!==e&&e.region&&n.append("region",e.region),null!==a&&void 0!==a&&a.page&&n.append("page",String(a.page)),null!==a&&void 0!==a&&a.limit&&n.append("limit",String(a.limit));const i=await fetch("".concat(r,"/survey/").concat(t,"/data?").concat(n.toString()));if(!i.ok)throw new Error("Failed to fetch survey data");const s=await i.json(),c=(s.data||s).map(t=>(0,o.A)({},t));return{rows:c,pagination:s.pagination?{page:Number(s.pagination.page)||1,limit:Number(s.pagination.limit)||c.length,total:Number(s.pagination.total)||c.length,pages:Number(s.pagination.pages)||1}:void 0}}async getAvailableFiltersForSurvey(t){const e=await fetch("".concat(r,"/survey/").concat(t,"/filters"));if(!e.ok)throw new Error("Failed to fetch filters");return await e.json()}async deleteSurvey(t){if(!(await fetch("".concat(r,"/survey/").concat(t),{method:"DELETE"})).ok)throw new Error("Failed to delete survey")}async deleteAllSurveys(){if(!(await fetch("".concat(r,"/surveys"),{method:"DELETE"})).ok)throw new Error("Failed to delete all surveys")}async exportSurveyData(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"csv";const a=await fetch("".concat(r,"/survey/").concat(t,"/export?format=").concat(e));if(!a.ok)throw new Error("Failed to export survey data");return await a.blob()}async healthCheck(){try{return(await fetch("".concat(r,"/health"))).ok}catch(t){return!1}}}n.instance=void 0;const i=n}}]);
//# sourceMappingURL=256.1b24337a.chunk.js.map