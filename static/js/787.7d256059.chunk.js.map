{"version":3,"file":"static/js/787.7d256059.chunk.js","mappings":"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","sources":["components/RegionalComparison.tsx","components/RegionalAnalytics.tsx","../node_modules/string-similarity-js/src/string-similarity.ts","components/ui/loading-spinner.tsx","../node_modules/@mui/material/ListItemIcon/listItemIconClasses.js","../node_modules/@mui/material/ListItemText/listItemTextClasses.js","../node_modules/@mui/material/MenuItem/menuItemClasses.js","../node_modules/@mui/material/MenuItem/MenuItem.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport { ColDef, GridOptions } from 'ag-grid-community';\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-alpine.css';\n\ninterface RegionalData {\n  region: string;\n  tcc_p25: number;\n  tcc_p50: number;\n  tcc_p75: number;\n  tcc_p90: number;\n  cf_p25: number;\n  cf_p50: number;\n  cf_p75: number;\n  cf_p90: number;\n  wrvus_p25: number;\n  wrvus_p50: number;\n  wrvus_p75: number;\n  wrvus_p90: number;\n}\n\ninterface RegionalComparisonProps {\n  data: RegionalData[];\n}\n\nconst percentiles = [\n  { key: 'p25', label: '25th Percentile' },\n  { key: 'p50', label: '50th Percentile' },\n  { key: 'p75', label: '75th Percentile' },\n  { key: 'p90', label: '90th Percentile' },\n];\n\nconst metricConfigs = [\n  {\n    key: 'tcc',\n    label: 'Total Cash Compensation (TCC)',\n    format: (v: number) => new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 }).format(v),\n    icon: (\n      <svg className=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\" />\n      </svg>\n    ),\n    color: 'blue'\n  },\n  {\n    key: 'cf',\n    label: 'Conversion Factor (CF)',\n    format: (v: number) => new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(v),\n    icon: (\n      <svg className=\"w-5 h-5 text-emerald-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z\" />\n      </svg>\n    ),\n    color: 'emerald'\n  },\n  {\n    key: 'wrvus',\n    label: 'Work RVUs (wRVUs)',\n    format: (v: number) => new Intl.NumberFormat('en-US').format(v),\n    icon: (\n      <svg className=\"w-5 h-5 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n      </svg>\n    ),\n    color: 'purple'\n  },\n];\n\nconst getMinMax = (values: number[]) => {\n  let min = Math.min(...values);\n  let max = Math.max(...values);\n  return { min, max };\n};\n\nconst RegionalComparison: React.FC<RegionalComparisonProps> = ({ data }) => {\n  const regionNames = data.map(region => region.region);\n\n  // Create AG Grid column definitions for each metric\n  const createColumnDefs = (metric: typeof metricConfigs[0]): ColDef[] => {\n    const baseColDef: ColDef = {\n      sortable: true,\n      filter: true,\n      resizable: true,\n      headerClass: 'font-semibold text-gray-700 bg-gray-50',\n      cellClass: 'text-sm',\n    };\n\n    const cols: ColDef[] = [\n      {\n        headerName: 'Percentile',\n        field: 'percentile',\n        pinned: 'left',\n        width: 150,\n        cellClass: 'font-medium text-gray-600 bg-gray-50',\n        headerClass: 'font-semibold text-gray-700 bg-gray-100',\n        ...baseColDef,\n      },\n    ];\n\n    // Add region columns\n    regionNames.forEach(region => {\n      cols.push({\n        headerName: region,\n        field: region,\n        flex: 1,\n        cellRenderer: (params: any) => {\n          const value = params.value;\n          const values = data.map(r => r[`${metric.key}_${params.data.percentileKey}` as keyof RegionalData] as number);\n          const { min, max } = getMinMax(values);\n          \n          let cellClass = 'p-3 rounded-lg transition-all duration-200 min-h-[60px] flex items-center justify-center';\n          let tooltip = '';\n          \n          if (value === max) {\n            cellClass += ' bg-green-50 border border-green-200 font-bold text-green-800';\n            tooltip = 'Highest value';\n          } else if (value === min) {\n            cellClass += ' bg-red-50 border border-red-200 font-bold text-red-800';\n            tooltip = 'Lowest value';\n          } else {\n            cellClass += ' bg-white hover:bg-gray-50';\n          }\n          \n          return (\n            <div className={cellClass} title={tooltip} style={{ minHeight: '60px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n              <div className=\"text-center text-sm font-medium whitespace-nowrap overflow-visible\">\n                {metric.format(value)}\n              </div>\n            </div>\n          );\n        },\n        ...baseColDef,\n      });\n    });\n\n    return cols;\n  };\n\n  // Create row data for each metric\n  const createRowData = (metric: typeof metricConfigs[0]) => {\n    return percentiles.map(p => {\n      const row: any = {\n        percentile: p.label,\n        percentileKey: p.key,\n      };\n      \n      regionNames.forEach(region => {\n        const regionData = data.find(d => d.region === region);\n        if (regionData) {\n          row[region] = regionData[`${metric.key}_${p.key}` as keyof RegionalData] as number;\n        }\n      });\n      \n      return row;\n    });\n  };\n\n  // Grid options with modern styling\n  const gridOptions: GridOptions = {\n    defaultColDef: {\n      sortable: true,\n      filter: true,\n      resizable: true,\n    },\n    domLayout: 'autoHeight',\n    suppressRowHoverHighlight: false,\n    rowHeight: 60,\n    suppressColumnVirtualisation: true,\n    suppressHorizontalScroll: true,\n    headerHeight: 50,\n    suppressRowClickSelection: true,\n    suppressCellFocus: true,\n    // Custom styling\n    getRowClass: () => 'hover:bg-gray-50 transition-colors duration-150',\n  };\n\n  return (\n    <div className=\"space-y-8\">\n      {metricConfigs.map(metric => (\n        <div key={metric.key} className=\"bg-white/50 backdrop-blur-sm rounded-xl shadow-lg border border-white/30 p-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <div className=\"flex items-center space-x-3\">\n              <div className={`w-10 h-10 bg-${metric.color}-100 rounded-lg flex items-center justify-center`}>\n                {metric.icon}\n              </div>\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-900\">{metric.label}</h3>\n                <p className=\"text-sm text-gray-600\">Regional comparison across percentiles</p>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <span className=\"text-xs text-gray-500 bg-gray-100 px-2 py-1 rounded-full\">\n                {regionNames.length} Regions\n              </span>\n              <span className=\"text-xs text-gray-500 bg-gray-100 px-2 py-1 rounded-full\">\n                {percentiles.length} Percentiles\n              </span>\n            </div>\n          </div>\n          \n          <div \n            className=\"ag-theme-alpine w-full overflow-visible rounded-xl border border-gray-200 shadow-sm\"\n            style={{\n              '--ag-header-background-color': 'rgba(249, 250, 251, 0.8)',\n              '--ag-header-foreground-color': '#374151',\n              '--ag-header-cell-hover-background-color': 'rgba(243, 244, 246, 0.8)',\n              '--ag-row-hover-color': 'rgba(249, 250, 251, 0.5)',\n              '--ag-selected-row-background-color': 'rgba(59, 130, 246, 0.1)',\n              '--ag-font-size': '14px',\n              '--ag-font-family': '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif',\n              '--ag-border-color': 'rgba(229, 231, 235, 0.5)',\n              '--ag-cell-horizontal-border': 'solid rgba(229, 231, 235, 0.3)',\n              '--ag-row-border-color': 'rgba(229, 231, 235, 0.3)',\n              '--ag-header-column-separator-color': 'rgba(229, 231, 235, 0.5)',\n              '--ag-header-column-separator-height': '30px',\n              '--ag-header-column-resize-handle-color': 'rgba(59, 130, 246, 0.3)',\n              '--ag-header-column-resize-handle-height': '30px',\n              '--ag-header-column-resize-handle-width': '2px',\n              '--ag-header-column-resize-handle-display': 'block',\n              '--ag-header-column-resize-handle-hover-color': 'rgba(59, 130, 246, 0.6)',\n              '--ag-header-column-resize-handle-hover-width': '3px',\n              '--ag-header-column-resize-handle-hover-height': '30px',\n              '--ag-header-column-resize-handle-hover-display': 'block',\n              '--ag-header-column-resize-handle-hover-transition': 'all 0.2s ease',\n              '--ag-header-column-resize-handle-hover-cursor': 'col-resize',\n              '--ag-header-column-resize-handle-hover-z-index': '1000',\n              '--ag-header-column-resize-handle-hover-position': 'absolute',\n              '--ag-header-column-resize-handle-hover-top': '0',\n              '--ag-header-column-resize-handle-hover-bottom': '0',\n              '--ag-header-column-resize-handle-hover-left': '50%',\n              '--ag-header-column-resize-handle-hover-transform': 'translateX(-50%)',\n              '--ag-header-column-resize-handle-hover-background-color': 'rgba(59, 130, 246, 0.6)',\n              '--ag-header-column-resize-handle-hover-border-radius': '2px',\n              '--ag-header-column-resize-handle-hover-box-shadow': '0 0 4px rgba(59, 130, 246, 0.3)',\n              borderRadius: '12px',\n              overflow: 'hidden',\n            } as React.CSSProperties}\n          >\n            <AgGridReact\n              columnDefs={createColumnDefs(metric)}\n              rowData={createRowData(metric)}\n              gridOptions={gridOptions}\n              suppressCellFocus={true}\n              suppressRowClickSelection={true}\n            />\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default RegionalComparison; ","import React, { useEffect, useState, useMemo } from 'react';\nimport { FormControl, Select, MenuItem } from '@mui/material';\nimport { ISurveyRow } from '../types/survey';\nimport { LocalStorageService } from '../services/StorageService';\nimport { SpecialtyMappingService } from '../services/SpecialtyMappingService';\nimport BackendService from '../services/BackendService';\nimport RegionalComparison from './RegionalComparison';\nimport LoadingSpinner from './ui/loading-spinner';\n\nconst REGION_NAMES = ['National', 'Northeast', 'Midwest', 'South', 'West'];\n\nexport const RegionalAnalytics: React.FC = () => {\n  const [normalizedRows, setNormalizedRows] = useState<ISurveyRow[]>([]);\n  const [selectedSpecialty, setSelectedSpecialty] = useState<string>('');\n  const [mappings, setMappings] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setLoading(true);\n        const storageService = new LocalStorageService();\n        const mappingService = new SpecialtyMappingService(storageService);\n        const backendService = BackendService.getInstance();\n        \n        // Get specialty mappings\n        const allMappings = await mappingService.getAllMappings();\n        console.log(`📋 Loaded ${allMappings.length} specialty mappings`);\n        console.log(`🎯 Allergy & Immunology mapping:`, allMappings.find(m => m.standardizedName === 'Allergy & Immunology'));\n        setMappings(allMappings);\n        \n        // Get surveys from backend\n        const surveys = await backendService.getAllSurveys();\n        console.log(`📊 Found ${surveys.length} surveys:`, surveys.map(s => ({ id: s.id, type: (s as any).type })));\n        let allRows: ISurveyRow[] = [];\n        \n        // Load data from each survey with sufficient limit to get all data\n        for (const survey of surveys) {\n          console.log(`🔍 Loading data for survey: ${survey.id} (${(survey as any).type || 'Unknown'})`);\n          const data = await backendService.getSurveyData(survey.id, undefined, { limit: 10000 }); // Request up to 10,000 rows\n          if (data && data.rows) { // BackendService transforms 'data' to 'rows'\n            console.log(`✅ Loaded ${data.rows.length} rows from survey ${survey.id}`);\n            \n            // Debug: Check what specialties are in this survey\n            const surveySpecialties = Array.from(new Set(data.rows.map((r: any) => r.specialty)));\n            console.log(`📋 Specialties in survey ${survey.id}:`, surveySpecialties);\n            \n            // Since survey type is undefined, we'll use a fallback approach\n            // For now, we'll treat all surveys as having data that should be included\n            const surveySource = (survey as any).type || 'Survey'; // Use 'Survey' as fallback\n            const transformedRows = data.rows.map((row: any) => {\n              // The backend already parsed the JSON data, so we can use it directly\n              return {\n                ...row,\n                surveySource: surveySource,\n                specialty: row.specialty || row.normalizedSpecialty || '',\n                geographicRegion: row.geographic_region || row.region,\n                // The percentile values are already available in the row\n                tcc_p25: row.tcc_p25,\n                tcc_p50: row.tcc_p50,\n                tcc_p75: row.tcc_p75,\n                tcc_p90: row.tcc_p90,\n                cf_p25: row.cf_p25,\n                cf_p50: row.cf_p50,\n                cf_p75: row.cf_p75,\n                cf_p90: row.cf_p90,\n                wrvu_p25: row.wrvu_p25,\n                wrvu_p50: row.wrvu_p50,\n                wrvu_p75: row.wrvu_p75,\n                wrvu_p90: row.wrvu_p90,\n              };\n            });\n            \n            allRows = allRows.concat(transformedRows);\n            console.log(`📊 Running total: ${allRows.length} rows`);\n          } else {\n            console.log(`❌ No data found for survey ${survey.id}`);\n          }\n        }\n        \n        console.log(`🎯 Total rows loaded: ${allRows.length}`);\n        console.log(`📋 All unique specialties loaded:`, Array.from(new Set(allRows.map(r => r.specialty))));\n        setNormalizedRows(allRows);\n      } catch (error) {\n        console.error('Error loading data for Regional Analytics:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadData();\n  }, []);\n\n  // Use standardizedName for dropdown\n  const specialties = useMemo(() => mappings.map(m => m.standardizedName).sort(), [mappings]);\n\n  // Mapping-based specialty filter\n  const filtered = useMemo(() => {\n    if (!selectedSpecialty) return [];\n    const mapping = mappings.find(m => m.standardizedName === selectedSpecialty);\n    if (!mapping) return [];\n    \n    console.log(`🔍 Filtering for specialty: \"${selectedSpecialty}\"`);\n    console.log(`📋 Available mappings:`, mapping.sourceSpecialties);\n    console.log(`📊 Total rows to filter: ${normalizedRows.length}`);\n    \n    // Since survey sources are not properly mapped, we'll filter by specialty name only\n    // This will include all rows that match any of the mapped specialty names\n    const mappedSpecialtyNames = mapping.sourceSpecialties.map((spec: any) => spec.specialty);\n    console.log(`🎯 Looking for specialties:`, mappedSpecialtyNames);\n    \n    const filteredRows = normalizedRows.filter(row => {\n      const rowSpecialty = String(row.specialty || row.normalizedSpecialty || '');\n      return mappedSpecialtyNames.some((mappedName: string) => \n        rowSpecialty.toLowerCase().includes(mappedName.toLowerCase()) ||\n        mappedName.toLowerCase().includes(rowSpecialty.toLowerCase())\n      );\n    });\n    \n    console.log(`✅ Filtered rows found: ${filteredRows.length}`);\n    if (filteredRows.length > 0) {\n      console.log(`📋 Sample filtered rows:`, filteredRows.slice(0, 3).map(row => ({\n        specialty: row.specialty,\n        surveySource: row.surveySource,\n        geographicRegion: row.geographicRegion,\n        tcc_p50: row.tcc_p50\n      })));\n    }\n    \n    return filteredRows;\n  }, [selectedSpecialty, mappings, normalizedRows]);\n\n  // Helper to average a field\n  const avg = (arr: number[]) => arr.length ? arr.reduce((a, b) => a + b, 0) / arr.length : 0;\n\n  // Prepare data for RegionalComparison: average each percentile field for each region\n  const regionalComparisonData = useMemo(() => {\n    console.log(`📊 Calculating regional comparison data for ${filtered.length} filtered rows`);\n    \n    // Debug: Check what regions are actually in the filtered data\n    const uniqueRegions = Array.from(new Set(filtered.map(r => r.geographicRegion)));\n    console.log(`🔍 Unique regions in filtered data:`, uniqueRegions);\n    \n    const result = REGION_NAMES.map(regionName => {\n      // For 'National', use all filtered rows\n      const regionRows = regionName === 'National'\n        ? filtered\n        : filtered.filter(r => r.geographicRegion === regionName);\n      \n      console.log(`🔍 Filtering for region \"${regionName}\": found ${regionRows.length} rows`);\n      if (regionRows.length > 0) {\n        console.log(`📋 Sample rows for ${regionName}:`, regionRows.slice(0, 2).map(r => ({\n          specialty: r.specialty,\n          region: r.geographicRegion,\n          tcc_p50: r.tcc_p50,\n          raw_tcc_p50: r.tcc_p50,\n          has_data_property: !!r.data,\n          data_type: typeof r.data,\n          parsed_data_keys: r.data ? Object.keys(r.data) : 'no data'\n        })));\n      }\n      \n      const regionData = {\n        region: regionName,\n        tcc_p25: avg(regionRows.map(r => Number(r.tcc_p25) || 0)),\n        tcc_p50: avg(regionRows.map(r => Number(r.tcc_p50) || 0)),\n        tcc_p75: avg(regionRows.map(r => Number(r.tcc_p75) || 0)),\n        tcc_p90: avg(regionRows.map(r => Number(r.tcc_p90) || 0)),\n        cf_p25: avg(regionRows.map(r => Number(r.cf_p25) || 0)),\n        cf_p50: avg(regionRows.map(r => Number(r.cf_p50) || 0)),\n        cf_p75: avg(regionRows.map(r => Number(r.cf_p75) || 0)),\n        cf_p90: avg(regionRows.map(r => Number(r.cf_p90) || 0)),\n        wrvus_p25: avg(regionRows.map(r => Number(r.wrvu_p25) || 0)),\n        wrvus_p50: avg(regionRows.map(r => Number(r.wrvu_p50) || 0)),\n        wrvus_p75: avg(regionRows.map(r => Number(r.wrvu_p75) || 0)),\n        wrvus_p90: avg(regionRows.map(r => Number(r.wrvu_p90) || 0)),\n      };\n      \n      console.log(`📋 ${regionName}: ${regionRows.length} rows, TCC P50: $${regionData.tcc_p50.toLocaleString()}`);\n      \n      return regionData;\n    });\n    \n    console.log(`✅ Regional comparison data calculated:`, result);\n    return result;\n  }, [filtered]);\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"bg-white/70 backdrop-blur-sm rounded-2xl shadow-xl border border-white/20 p-12\">\n            <LoadingSpinner \n              message=\"Analyzing compensation data across regions...\"\n              size=\"lg\"\n              variant=\"primary\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Specialty Selection Card */}\n        <div className=\"bg-white/70 backdrop-blur-sm rounded-2xl shadow-xl border border-white/20 p-6 mb-8\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <div>\n              <h3 className=\"text-xl font-semibold text-gray-900\">Select Specialty</h3>\n              <p className=\"text-gray-600 text-sm\">Choose a specialty to analyze regional compensation patterns</p>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <span className=\"text-xs text-gray-500 bg-gray-100 px-2 py-1 rounded-full\">\n                {specialties.length} Available\n              </span>\n            </div>\n          </div>\n          \n          <div className=\"relative\">\n            <FormControl sx={{ width: '100%' }}>\n              <Select\n                value={selectedSpecialty}\n                onChange={(e: React.ChangeEvent<{ value: unknown }>) => setSelectedSpecialty(e.target.value as string)}\n                displayEmpty\n                sx={{\n                  backgroundColor: 'rgba(249, 250, 251, 0.5)',\n                  border: '1px solid #d1d5db',\n                  borderRadius: '12px',\n                  '& .MuiOutlinedInput-root': {\n                    fontSize: '0.875rem',\n                    height: '48px',\n                    borderRadius: '12px',\n                    '&:hover': {\n                      backgroundColor: 'rgba(255, 255, 255, 0.8)',\n                      borderColor: '#9ca3af',\n                    },\n                    '&.Mui-focused': {\n                      backgroundColor: 'white',\n                      boxShadow: '0 0 0 2px rgba(59, 130, 246, 0.5)',\n                      borderColor: '#3b82f6',\n                    }\n                  },\n                  '& .MuiSelect-select': {\n                    paddingTop: '12px',\n                    paddingBottom: '12px',\n                    paddingLeft: '16px',\n                    paddingRight: '16px',\n                  }\n                }}\n                MenuProps={{\n                  PaperProps: {\n                    sx: {\n                      backgroundColor: 'rgba(255, 255, 255, 0.95)',\n                      backdropFilter: 'blur(8px)',\n                      border: '1px solid rgba(255, 255, 255, 0.2)',\n                      borderRadius: '12px',\n                      boxShadow: '0 10px 25px rgba(0, 0, 0, 0.1)',\n                      maxHeight: '300px'\n                    }\n                  }\n                }}\n              >\n                <MenuItem value=\"\" sx={{ \n                  color: '#6b7280',\n                  fontStyle: 'italic',\n                  '&:hover': { backgroundColor: 'rgba(59, 130, 246, 0.1)' }\n                }}>\n                  Select a specialty to begin analysis\n                </MenuItem>\n                {specialties.map((s: string) => (\n                  <MenuItem key={s} value={s} sx={{ \n                    '&:hover': { backgroundColor: 'rgba(59, 130, 246, 0.1)' },\n                    '&.Mui-selected': { \n                      backgroundColor: 'rgba(59, 130, 246, 0.15)',\n                      '&:hover': { backgroundColor: 'rgba(59, 130, 246, 0.2)' }\n                    }\n                  }}>\n                    {s}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n\n          {/* Status Messages */}\n          {selectedSpecialty && (\n            <div className=\"mt-4 p-4 bg-gray-50 border border-gray-200 rounded-xl\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center\">\n                  <svg className=\"w-5 h-5 text-gray-500 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                  </svg>\n                  <span className=\"text-sm font-medium text-gray-800\">\n                    Analyzing: {selectedSpecialty}\n                  </span>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"text-xs text-gray-600 bg-gray-100 px-2 py-1 rounded-full\">\n                    {filtered.length} data points\n                  </span>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Regional Comparison Data */}\n        {selectedSpecialty && regionalComparisonData.length > 0 && (\n          <div className=\"bg-white/70 backdrop-blur-sm rounded-2xl shadow-xl border border-white/20 p-6\">\n            <RegionalComparison data={regionalComparisonData} />\n          </div>\n        )}\n\n        {/* Empty State */}\n        {selectedSpecialty && regionalComparisonData.length === 0 && (\n          <div className=\"bg-white/70 backdrop-blur-sm rounded-2xl shadow-xl border border-white/20 p-12 text-center\">\n            <div className=\"w-16 h-16 bg-gradient-to-r from-amber-100 to-orange-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <svg className=\"w-8 h-8 text-amber-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0112 15c-2.34 0-4.47-.881-6.08-2.33\" />\n              </svg>\n            </div>\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">No Regional Data Found</h3>\n            <p className=\"text-gray-600\">No compensation data available for {selectedSpecialty} across the selected regions.</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RegionalAnalytics; ","/* global exports, Map */\n/**\n * Calculate similarity between two strings\n * @param {string} str1 First string to match\n * @param {string} str2 Second string to match\n * @param {number} [substringLength=2] Optional. Length of substring to be used in calculating similarity. Default 2.\n * @param {boolean} [caseSensitive=false] Optional. Whether you want to consider case in string matching. Default false;\n * @returns Number between 0 and 1, with 0 being a low match score.\n */\nexport const stringSimilarity = (str1: string, str2: string, substringLength: number = 2, caseSensitive: boolean = false) => {\n\tif (!caseSensitive) {\n\t\tstr1 = str1.toLowerCase();\n\t\tstr2 = str2.toLowerCase();\n\t}\n\n\tif (str1.length < substringLength || str2.length < substringLength)\n\t\treturn 0;\n\n\tconst map = new Map();\n\tfor (let i = 0; i < str1.length - (substringLength - 1); i++) {\n\t\tconst substr1 = str1.substr(i, substringLength);\n\t\tmap.set(substr1, map.has(substr1) ? map.get(substr1) + 1 : 1);\n\t}\n\n\tlet match = 0;\n\tfor (let j = 0; j < str2.length - (substringLength - 1); j++) {\n\t\tconst substr2 = str2.substr(j, substringLength);\n\t\tconst count = map.has(substr2) ? map.get(substr2) : 0;\n\t\tif (count > 0) {\n\t\t\tmap.set(substr2, count - 1);\n\t\t\tmatch++;\n\t\t}\n\t}\n\n\treturn (match * 2) / (str1.length + str2.length - ((substringLength - 1) * 2));\n};\nexport default stringSimilarity;\n","import React from 'react';\nimport { cn } from '../../utils/cn';\n\ninterface LoadingSpinnerProps {\n  message?: string;\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n  variant?: 'default' | 'primary' | 'secondary' | 'success' | 'warning' | 'error';\n  fullScreen?: boolean;\n  overlay?: boolean;\n  className?: string;\n}\n\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({ \n  message = 'Loading...', \n  size = 'md',\n  variant = 'primary',\n  fullScreen = false,\n  overlay = false,\n  className\n}) => {\n  const sizeClasses = {\n    xs: 'w-4 h-4',\n    sm: 'w-6 h-6', \n    md: 'w-8 h-8',\n    lg: 'w-12 h-12',\n    xl: 'w-16 h-16'\n  };\n\n  const variantClasses = {\n    default: 'text-gray-600',\n    primary: 'text-indigo-600',\n    secondary: 'text-gray-500',\n    success: 'text-emerald-600',\n    warning: 'text-amber-600',\n    error: 'text-red-600'\n  };\n\n  const spinnerSize = sizeClasses[size];\n  const spinnerColor = variantClasses[variant];\n\n  const SpinnerIcon = () => (\n    <svg \n      className={cn(\n        'animate-spin',\n        spinnerSize,\n        spinnerColor,\n        'inline-block'\n      )}\n      xmlns=\"http://www.w3.org/2000/svg\" \n      fill=\"none\" \n      viewBox=\"0 0 24 24\"\n    >\n      <circle \n        className=\"opacity-25\" \n        cx=\"12\" \n        cy=\"12\" \n        r=\"10\" \n        stroke=\"currentColor\" \n        strokeWidth=\"4\"\n      />\n      <path \n        className=\"opacity-75\" \n        fill=\"currentColor\" \n        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n      />\n    </svg>\n  );\n\n  const content = (\n    <div className={cn(\n      'flex flex-col items-center justify-center gap-3',\n      fullScreen ? 'min-h-screen' : 'min-h-[200px]',\n      className\n    )}>\n      <SpinnerIcon />\n      {message && (\n        <p className={cn(\n          'text-sm font-medium text-center',\n          variant === 'default' ? 'text-gray-600' : 'text-gray-700'\n        )}>\n          {message}\n        </p>\n      )}\n    </div>\n  );\n\n  if (overlay) {\n    return (\n      <div className=\"fixed inset-0 flex items-center justify-center bg-white/90 backdrop-blur-sm z-50\">\n        {content}\n      </div>\n    );\n  }\n\n  return content;\n};\n\n// Button loading spinner for inline use\nexport const ButtonSpinner: React.FC<{ size?: 'sm' | 'md' }> = ({ size = 'md' }) => {\n  const sizeClasses = {\n    sm: 'w-4 h-4',\n    md: 'w-5 h-5'\n  };\n\n  return (\n    <svg \n      className={cn(\n        'animate-spin text-current',\n        sizeClasses[size]\n      )}\n      xmlns=\"http://www.w3.org/2000/svg\" \n      fill=\"none\" \n      viewBox=\"0 0 24 24\"\n    >\n      <circle \n        className=\"opacity-25\" \n        cx=\"12\" \n        cy=\"12\" \n        r=\"10\" \n        stroke=\"currentColor\" \n        strokeWidth=\"4\"\n      />\n      <path \n        className=\"opacity-75\" \n        fill=\"currentColor\" \n        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n      />\n    </svg>\n  );\n};\n\n// Page loading spinner for full page loads\nexport const PageSpinner: React.FC<{ message?: string }> = ({ message = 'Loading page...' }) => (\n  <LoadingSpinner \n    message={message}\n    size=\"lg\"\n    variant=\"primary\"\n    fullScreen={true}\n  />\n);\n\n// Inline loading spinner for small areas\nexport const InlineSpinner: React.FC<{ message?: string; size?: 'sm' | 'md' }> = ({ \n  message, \n  size = 'md' \n}) => (\n  <LoadingSpinner \n    message={message}\n    size={size}\n    variant=\"default\"\n    className=\"py-8\"\n  />\n);\n\n// Overlay loading spinner for modal/overlay contexts\nexport const OverlaySpinner: React.FC<{ message?: string }> = ({ message = 'Processing...' }) => (\n  <LoadingSpinner \n    message={message}\n    size=\"md\"\n    variant=\"primary\"\n    overlay={true}\n  />\n);\n\nexport default LoadingSpinner;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemIconUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemIcon', slot);\n}\nconst listItemIconClasses = generateUtilityClasses('MuiListItemIcon', ['root', 'alignItemsFlexStart']);\nexport default listItemIconClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemTextUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemText', slot);\n}\nconst listItemTextClasses = generateUtilityClasses('MuiListItemText', ['root', 'multiline', 'dense', 'inset', 'primary', 'secondary']);\nexport default listItemTextClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"component\", \"dense\", \"divider\", \"disableGutters\", \"focusVisibleClassName\", \"role\", \"tabIndex\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from '../List/ListContext';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport { dividerClasses } from '../Divider';\nimport { listItemIconClasses } from '../ListItemIcon';\nimport { listItemTextClasses } from '../ListItemText';\nimport menuItemClasses, { getMenuItemUtilityClass } from './menuItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body1, {\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.divider && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n  backgroundClip: 'padding-box'\n}, {\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  }\n}, !ownerState.dense && {\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 'auto'\n  }\n}, ownerState.dense && _extends({\n  minHeight: 32,\n  // https://m2.material.io/components/menus#specs > Dense\n  paddingTop: 4,\n  paddingBottom: 4\n}, theme.typography.body2, {\n  [`& .${listItemIconClasses.root} svg`]: {\n    fontSize: '1.25rem'\n  }\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n  const {\n      autoFocus = false,\n      component = 'li',\n      dense = false,\n      divider = false,\n      disableGutters = false,\n      focusVisibleClassName,\n      role = 'menuitem',\n      tabIndex: tabIndexProp,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const childContext = React.useMemo(() => ({\n    dense: dense || context.dense || false,\n    disableGutters\n  }), [context.dense, dense, disableGutters]);\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const ownerState = _extends({}, props, {\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  });\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, _extends({\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n      className: clsx(classes.root, className)\n    }, other, {\n      ownerState: ownerState,\n      classes: classes\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * If `true`, the component is selected.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;"],"names":["percentiles","key","label","metricConfigs","format","v","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","icon","_jsx","className","fill","stroke","viewBox","children","strokeLinecap","strokeLinejoin","strokeWidth","d","color","_ref","data","regionNames","map","region","createColumnDefs","metric","baseColDef","sortable","filter","resizable","headerClass","cellClass","cols","_objectSpread","headerName","field","pinned","width","forEach","push","flex","cellRenderer","params","value","values","r","concat","percentileKey","min","max","Math","getMinMax","tooltip","title","minHeight","display","alignItems","justifyContent","createRowData","p","row","percentile","regionData","find","gridOptions","defaultColDef","domLayout","suppressRowHoverHighlight","rowHeight","suppressColumnVirtualisation","suppressHorizontalScroll","headerHeight","suppressRowClickSelection","suppressCellFocus","getRowClass","_jsxs","length","borderRadius","overflow","AgGridReact","columnDefs","rowData","REGION_NAMES","RegionalAnalytics","normalizedRows","setNormalizedRows","useState","selectedSpecialty","setSelectedSpecialty","mappings","setMappings","loading","setLoading","useEffect","async","storageService","LocalStorageService","mappingService","SpecialtyMappingService","backendService","BackendService","getInstance","allMappings","getAllMappings","console","log","m","standardizedName","surveys","getAllSurveys","s","id","type","allRows","survey","getSurveyData","undefined","limit","rows","surveySpecialties","Array","from","Set","specialty","surveySource","transformedRows","normalizedSpecialty","geographicRegion","geographic_region","tcc_p25","tcc_p50","tcc_p75","tcc_p90","cf_p25","cf_p50","cf_p75","cf_p90","wrvu_p25","wrvu_p50","wrvu_p75","wrvu_p90","error","loadData","specialties","useMemo","sort","filtered","mapping","sourceSpecialties","mappedSpecialtyNames","spec","filteredRows","rowSpecialty","String","some","mappedName","toLowerCase","includes","slice","avg","arr","reduce","a","b","regionalComparisonData","uniqueRegions","result","regionName","regionRows","raw_tcc_p50","has_data_property","data_type","parsed_data_keys","Object","keys","Number","wrvus_p25","wrvus_p50","wrvus_p75","wrvus_p90","toLocaleString","LoadingSpinner","message","size","variant","FormControl","sx","Select","onChange","e","target","displayEmpty","backgroundColor","border","fontSize","height","borderColor","boxShadow","paddingTop","paddingBottom","paddingLeft","paddingRight","MenuProps","PaperProps","backdropFilter","maxHeight","MenuItem","fontStyle","fillRule","clipRule","RegionalComparison","exports","str1","str2","substringLength","caseSensitive","Map","i","substr1","substr","set","has","get","match","j","substr2","count","fullScreen","overlay","spinnerSize","xs","sm","md","lg","xl","spinnerColor","default","primary","secondary","success","warning","SpinnerIcon","cn","xmlns","cx","cy","content","ButtonSpinner","_ref2","generateUtilityClasses","getMenuItemUtilityClass","slot","generateUtilityClass","_excluded","MenuItemRoot","styled","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","props","styles","ownerState","root","dense","divider","disableGutters","gutters","theme","_extends","typography","body1","position","textDecoration","boxSizing","whiteSpace","borderBottom","vars","palette","backgroundClip","action","hover","menuItemClasses","selected","mainChannel","selectedOpacity","alpha","main","focusVisible","focusOpacity","hoverOpacity","focus","disabled","opacity","disabledOpacity","dividerClasses","marginTop","spacing","marginBottom","inset","marginLeft","listItemTextClasses","listItemIconClasses","minWidth","breakpoints","up","body2","React","inProps","ref","useThemeProps","autoFocus","component","focusVisibleClassName","role","tabIndex","tabIndexProp","other","_objectWithoutPropertiesLoose","context","ListContext","childContext","menuItemRef","useEnhancedEffect","current","classes","slots","composedClasses","composeClasses","useUtilityClasses","handleRef","useForkRef","Provider","clsx"],"sourceRoot":""}