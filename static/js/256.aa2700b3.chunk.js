"use strict";(self.webpackChunksurvey_data_processing_system=self.webpackChunksurvey_data_processing_system||[]).push([[256],{6256:(t,e,a)=>{a.r(e),a.d(e,{default:()=>s});var n=a(2555);const o="https://survey-aggregator-backend.azurewebsites.net/api";class r{constructor(){}static getInstance(){return r.instance||(r.instance=new r),r.instance}async getSurveyMeta(t){const e=await fetch("".concat(o,"/survey/").concat(t,"/meta"));if(!e.ok)throw new Error("Failed to fetch survey metadata");return await e.json()}async uploadSurvey(t,e,a,n,r){const s=new FormData;s.append("file",t),s.append("name",e),s.append("year",a.toString()),s.append("type",n);const c=new XMLHttpRequest;return new Promise((t,e)=>{c.open("POST","".concat(o,"/upload")),c.onload=()=>{if(c.status>=200&&c.status<300)try{const e=JSON.parse(c.responseText);t({surveyId:e.surveyId,rowCount:e.rowCount})}catch(a){e(new Error("Invalid server response"))}else e(new Error("Upload failed: ".concat(c.status," ").concat(c.statusText)))},c.onerror=()=>e(new Error("Network error during upload")),c.upload.onprogress=t=>{if(!r||!t.lengthComputable)return;const e=Math.round(t.loaded/t.total*100);r(e)},c.send(s)})}async getAllSurveys(){const t=await fetch("".concat(o,"/surveys"));if(!t.ok)throw new Error("Failed to fetch surveys");return(await t.json()).map(t=>{var e,a,n,o,r,s;return{id:t.id,name:t.name,year:t.year.toString(),type:t.type,uploadDate:t.uploadDate,rowCount:null!==(e=null!==(a=t.rowCount)&&void 0!==a?a:t.row_count)&&void 0!==e?e:0,specialtyCount:null!==(n=null!==(o=t.specialtyCount)&&void 0!==o?o:t.specialty_count)&&void 0!==n?n:0,dataPoints:null!==(r=null!==(s=t.dataPoints)&&void 0!==s?s:t.data_points)&&void 0!==r?r:0,colorAccent:t.colorAccent||"#6366F1",metadata:t.metadata}})}async getSurveyData(t,e,a){const r=new URLSearchParams;null!==e&&void 0!==e&&e.specialty&&r.append("specialty",e.specialty),null!==e&&void 0!==e&&e.providerType&&r.append("providerType",e.providerType),null!==e&&void 0!==e&&e.region&&r.append("region",e.region),null!==a&&void 0!==a&&a.page&&r.append("page",String(a.page)),null!==a&&void 0!==a&&a.limit&&r.append("limit",String(a.limit));const s=await fetch("".concat(o,"/survey/").concat(t,"/data?").concat(r.toString()));if(!s.ok)throw new Error("Failed to fetch survey data");const c=await s.json(),i=(c.data||c).map(t=>(0,n.A)({},t));return{rows:i,pagination:c.pagination?{page:Number(c.pagination.page)||1,limit:Number(c.pagination.limit)||i.length,total:Number(c.pagination.total)||i.length,pages:Number(c.pagination.pages)||1}:void 0}}async getAvailableFiltersForSurvey(t){const e=await fetch("".concat(o,"/survey/").concat(t,"/filters"));if(!e.ok)throw new Error("Failed to fetch filters");return await e.json()}async deleteSurvey(t){if(!(await fetch("".concat(o,"/survey/").concat(t),{method:"DELETE"})).ok)throw new Error("Failed to delete survey")}async deleteAllSurveys(){if(!(await fetch("".concat(o,"/surveys"),{method:"DELETE"})).ok)throw new Error("Failed to delete all surveys")}async exportSurveyData(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"csv";const a=await fetch("".concat(o,"/survey/").concat(t,"/export?format=").concat(e));if(!a.ok)throw new Error("Failed to export survey data");return await a.blob()}async healthCheck(){try{return(await fetch("".concat(o,"/health"))).ok}catch(t){return!1}}}r.instance=void 0;const s=r}}]);
//# sourceMappingURL=256.aa2700b3.chunk.js.map