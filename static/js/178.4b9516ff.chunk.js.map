{"version":3,"file":"static/js/178.4b9516ff.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/transitions/utils.js","../node_modules/@mui/utils/esm/useId/useId.js","../node_modules/@mui/base/Portal/Portal.js","../node_modules/@mui/material/styles/useTheme.js","../node_modules/@mui/material/Grow/Grow.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/react-transition-group/esm/utils/reflow.js"],"sourcesContent":["export const reflow = node => node.scrollTop;\nexport function getTransitionProps(props, options) {\n  var _style$transitionDura, _style$transitionTimi;\n  const {\n    timeout,\n    easing,\n    style = {}\n  } = props;\n  return {\n    duration: (_style$transitionDura = style.transitionDuration) != null ? _style$transitionDura : typeof timeout === 'number' ? timeout : timeout[options.mode] || 0,\n    easing: (_style$transitionTimi = style.transitionTimingFunction) != null ? _style$transitionTimi : typeof easing === 'object' ? easing[options.mode] : easing,\n    delay: style.transitionDelay\n  };\n}","'use client';\n\nimport * as React from 'react';\nlet globalId = 0;\nfunction useGlobalId(idOverride) {\n  const [defaultId, setDefaultId] = React.useState(idOverride);\n  const id = idOverride || defaultId;\n  React.useEffect(() => {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the incrementing value for client-side rendering only.\n      // We can't use it server-side.\n      // If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem\n      globalId += 1;\n      setDefaultId(`mui-${globalId}`);\n    }\n  }, [defaultId]);\n  return id;\n}\n\n// downstream bundlers may remove unnecessary concatenation, but won't remove toString call -- Workaround for https://github.com/webpack/webpack/issues/14814\nconst maybeReactUseId = React['useId'.toString()];\n/**\n *\n * @example <div id={useId()} />\n * @param idOverride\n * @returns {string}\n */\nexport default function useId(idOverride) {\n  if (maybeReactUseId !== undefined) {\n    const reactId = maybeReactUseId();\n    return idOverride != null ? idOverride : reactId;\n  }\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- `React.useId` is invariant at runtime.\n  return useGlobalId(idOverride);\n}","'use client';\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { exactProp, HTMLElementType, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useForkRef as useForkRef, unstable_setRef as setRef } from '@mui/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n\n/**\n * Portals provide a first-class way to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n *\n * Demos:\n *\n * - [Portal](https://mui.com/base-ui/react-portal/)\n *\n * API:\n *\n * - [Portal API](https://mui.com/base-ui/react-portal/components-api/#portal)\n */\nconst Portal = /*#__PURE__*/React.forwardRef(function Portal(props, forwardedRef) {\n  const {\n    children,\n    container,\n    disablePortal = false\n  } = props;\n  const [mountNode, setMountNode] = React.useState(null);\n  // @ts-expect-error TODO upstream fix\n  const handleRef = useForkRef( /*#__PURE__*/React.isValidElement(children) ? children.ref : null, forwardedRef);\n  useEnhancedEffect(() => {\n    if (!disablePortal) {\n      setMountNode(getContainer(container) || document.body);\n    }\n  }, [container, disablePortal]);\n  useEnhancedEffect(() => {\n    if (mountNode && !disablePortal) {\n      setRef(forwardedRef, mountNode);\n      return () => {\n        setRef(forwardedRef, null);\n      };\n    }\n    return undefined;\n  }, [forwardedRef, mountNode, disablePortal]);\n  if (disablePortal) {\n    if ( /*#__PURE__*/React.isValidElement(children)) {\n      const newProps = {\n        ref: handleRef\n      };\n      return /*#__PURE__*/React.cloneElement(children, newProps);\n    }\n    return /*#__PURE__*/_jsx(React.Fragment, {\n      children: children\n    });\n  }\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: mountNode ? /*#__PURE__*/ReactDOM.createPortal(children, mountNode) : mountNode\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Portal.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The children to render into the `container`.\n   */\n  children: PropTypes.node,\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * You can also provide a callback, which is called in a React layout effect.\n   * This lets you set the container from a ref, and also makes server-side rendering possible.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Portal['propTypes' + ''] = exactProp(Portal.propTypes);\n}\nexport { Portal };","'use client';\n\nimport * as React from 'react';\nimport { useTheme as useThemeSystem } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nimport THEME_ID from './identifier';\nexport default function useTheme() {\n  const theme = useThemeSystem(defaultTheme);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n  return theme[THEME_ID] || theme;\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"addEndListener\", \"appear\", \"children\", \"easing\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useTimeout from '@mui/utils/useTimeout';\nimport elementAcceptingRef from '@mui/utils/elementAcceptingRef';\nimport { Transition } from 'react-transition-group';\nimport useTheme from '../styles/useTheme';\nimport { getTransitionProps, reflow } from '../transitions/utils';\nimport useForkRef from '../utils/useForkRef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction getScale(value) {\n  return `scale(${value}, ${value ** 2})`;\n}\nconst styles = {\n  entering: {\n    opacity: 1,\n    transform: getScale(1)\n  },\n  entered: {\n    opacity: 1,\n    transform: 'none'\n  }\n};\n\n/*\n TODO v6: remove\n Conditionally apply a workaround for the CSS transition bug in Safari 15.4 / WebKit browsers.\n */\nconst isWebKit154 = typeof navigator !== 'undefined' && /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) && /(os |version\\/)15(.|_)4/i.test(navigator.userAgent);\n\n/**\n * The Grow transition is used by the [Tooltip](/material-ui/react-tooltip/) and\n * [Popover](/material-ui/react-popover/) components.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\nconst Grow = /*#__PURE__*/React.forwardRef(function Grow(props, ref) {\n  const {\n      addEndListener,\n      appear = true,\n      children,\n      easing,\n      in: inProp,\n      onEnter,\n      onEntered,\n      onEntering,\n      onExit,\n      onExited,\n      onExiting,\n      style,\n      timeout = 'auto',\n      // eslint-disable-next-line react/prop-types\n      TransitionComponent = Transition\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const timer = useTimeout();\n  const autoTimeout = React.useRef();\n  const theme = useTheme();\n  const nodeRef = React.useRef(null);\n  const handleRef = useForkRef(nodeRef, children.ref, ref);\n  const normalizedTransitionCallback = callback => maybeIsAppearing => {\n    if (callback) {\n      const node = nodeRef.current;\n\n      // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n      if (maybeIsAppearing === undefined) {\n        callback(node);\n      } else {\n        callback(node, maybeIsAppearing);\n      }\n    }\n  };\n  const handleEntering = normalizedTransitionCallback(onEntering);\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    reflow(node); // So the animation always start from the start.\n\n    const {\n      duration: transitionDuration,\n      delay,\n      easing: transitionTimingFunction\n    } = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: 'enter'\n    });\n    let duration;\n    if (timeout === 'auto') {\n      duration = theme.transitions.getAutoHeightDuration(node.clientHeight);\n      autoTimeout.current = duration;\n    } else {\n      duration = transitionDuration;\n    }\n    node.style.transition = [theme.transitions.create('opacity', {\n      duration,\n      delay\n    }), theme.transitions.create('transform', {\n      duration: isWebKit154 ? duration : duration * 0.666,\n      delay,\n      easing: transitionTimingFunction\n    })].join(',');\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback(onEntered);\n  const handleExiting = normalizedTransitionCallback(onExiting);\n  const handleExit = normalizedTransitionCallback(node => {\n    const {\n      duration: transitionDuration,\n      delay,\n      easing: transitionTimingFunction\n    } = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: 'exit'\n    });\n    let duration;\n    if (timeout === 'auto') {\n      duration = theme.transitions.getAutoHeightDuration(node.clientHeight);\n      autoTimeout.current = duration;\n    } else {\n      duration = transitionDuration;\n    }\n    node.style.transition = [theme.transitions.create('opacity', {\n      duration,\n      delay\n    }), theme.transitions.create('transform', {\n      duration: isWebKit154 ? duration : duration * 0.666,\n      delay: isWebKit154 ? delay : delay || duration * 0.333,\n      easing: transitionTimingFunction\n    })].join(',');\n    node.style.opacity = 0;\n    node.style.transform = getScale(0.75);\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(onExited);\n  const handleAddEndListener = next => {\n    if (timeout === 'auto') {\n      timer.start(autoTimeout.current || 0, next);\n    }\n    if (addEndListener) {\n      // Old call signature before `react-transition-group` implemented `nodeRef`\n      addEndListener(nodeRef.current, next);\n    }\n  };\n  return /*#__PURE__*/_jsx(TransitionComponent, _extends({\n    appear: appear,\n    in: inProp,\n    nodeRef: nodeRef,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    timeout: timeout === 'auto' ? null : timeout\n  }, other, {\n    children: (state, childProps) => {\n      return /*#__PURE__*/React.cloneElement(children, _extends({\n        style: _extends({\n          opacity: 0,\n          transform: getScale(0.75),\n          visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n        }, styles[state], style, children.props.style),\n        ref: handleRef\n      }, childProps));\n    }\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grow.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Add a custom transition end trigger. Called with the transitioning DOM\n   * node and a done callback. Allows for more fine grained transition end\n   * logic. Note: Timeouts are still used as a fallback if provided.\n   */\n  addEndListener: PropTypes.func,\n  /**\n   * Perform the enter transition when it first mounts if `in` is also `true`.\n   * Set this to `false` to disable this behavior.\n   * @default true\n   */\n  appear: PropTypes.bool,\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * The transition timing function.\n   * You may specify a single easing or a object containing enter and exit values.\n   */\n  easing: PropTypes.oneOfType([PropTypes.shape({\n    enter: PropTypes.string,\n    exit: PropTypes.string\n  }), PropTypes.string]),\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   * @default 'auto'\n   */\n  timeout: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nGrow.muiSupportAuto = true;\nexport default Grow;","export default {\n  disabled: false\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};"],"names":["reflow","node","scrollTop","getTransitionProps","props","options","_style$transitionDura","_style$transitionTimi","timeout","easing","style","duration","transitionDuration","mode","transitionTimingFunction","delay","transitionDelay","globalId","maybeReactUseId","React","toString","useId","idOverride","undefined","reactId","defaultId","setDefaultId","id","concat","useGlobalId","Portal","forwardedRef","children","container","disablePortal","mountNode","setMountNode","handleRef","useForkRef","ref","useEnhancedEffect","getContainer","document","body","setRef","newProps","_jsx","ReactDOM","useTheme","theme","useThemeSystem","defaultTheme","THEME_ID","_excluded","getScale","value","styles","entering","opacity","transform","entered","isWebKit154","navigator","test","userAgent","Grow","addEndListener","appear","in","inProp","onEnter","onEntered","onEntering","onExit","onExited","onExiting","TransitionComponent","Transition","other","_objectWithoutPropertiesLoose","timer","useTimeout","autoTimeout","nodeRef","normalizedTransitionCallback","callback","maybeIsAppearing","current","handleEntering","handleEnter","isAppearing","transitions","getAutoHeightDuration","clientHeight","transition","create","join","handleEntered","handleExiting","handleExit","handleExited","_extends","next","start","state","childProps","visibility","muiSupportAuto","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","_React$Component","context","_this","call","this","initialStatus","isMounting","enter","appearStatus","unmountOnExit","mountOnEnter","status","nextCallback","_inheritsLoose","getDerivedStateFromProps","_ref","prevState","_proto","prototype","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","mounting","forceReflow","performEnter","performExit","setState","_this2","appearing","_ref2","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onTransitionEnd","_this3","cancel","nextState","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","_ref3","maybeNextCallback","setTimeout","render","_this$props","TransitionGroupContext","Provider","only","noop","contextType","propTypes","defaultProps"],"sourceRoot":""}